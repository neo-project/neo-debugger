variables:
  configuration: release

trigger:
  batch: false
  branches:
    include:
    - master
    - release/*
  paths:
    include:
    - '*'
    exclude:
    - 'readme.md'
    - 'docs/*'

jobs:
- job: vscode_debugger
  displayName: Build VSCode Debugger
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
  - task: UseDotNet@2
    displayName: 'use v6.0.x .NET SDK'
    inputs:
      packageType: 'sdk'
      version: '6.0.x'
  - task: DotNetCoreCLI@2
    displayName: 'dotnet restore'
    inputs:
      command: 'restore'
      feedsToUse: 'select'
      vstsFeed: 'c96908c2-e4b5-4c77-b955-4b690f24380b/9e84eb49-63f0-4b48-a8c4-039901073643'
  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack neodebug 2 adapter'
    inputs:
      command: 'pack'
      packagesToPack: './src/adapter2/*.csproj'
      packDirectory: '$(Build.ArtifactStagingDirectory)/adapter'
      includesymbols: true
      versioningScheme: 'off'
  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack neodebug 3 adapter'
    inputs:
      command: 'pack'
      packagesToPack: './src/adapter3/*.csproj'
      packDirectory: '$(Build.ArtifactStagingDirectory)/adapter'
      includesymbols: true
      versioningScheme: 'off'
  - task: PublishBuildArtifacts@1
    displayName: 'publish neodebug adapter nuget artifacts'
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/adapter'
      artifactName: 'nuget-package'
  - task: CopyFiles@2
    displayName: 'copy adapter nuget package into extension folder'
    inputs:
      SourceFolder: '$(Build.ArtifactStagingDirectory)/adapter'
      Contents: 'Neo.Debug?.Adapter.*.nupkg'
      TargetFolder: './src/extension'
  - task: DeleteFiles@1
    displayName: 'remove symbol nuget packages from extension folder'
    inputs:
      sourceFolder:  './src/extension'
      contents: '*.symbols.nupkg'
  - task: CopyFiles@2
    displayName: 'update extension readme from root repo readme'
    inputs:
      SourceFolder: '.'
      Contents: 'readme.md'
      TargetFolder: './src/extension'
  - task: Npm@1
    displayName: 'npm install'
    inputs:
      command: 'ci'
      workingDir: './src/extension' 
  - task: Npm@1
    displayName: 'npm run package'
    inputs:
      command: 'custom'
      customCommand: 'run package'
      workingDir: './src/extension' 
  - task: CopyFiles@2
    displayName: 'copy VSIX package to Artifact Staging Directory'
    inputs:
      SourceFolder: './src/extension'
      Contents: '*.vsix'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/extension'
  - task: PublishBuildArtifacts@1
    displayName: 'publish vsix build artifacts'
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/extension'
      artifactName: 'VSCode-package'
- job: vswin_debugger
  displayName: Build VS Windows Debugger
  pool:
    vmImage: 'windows-2019'
  steps:
  - script: |
      @echo off
      
      set vswherepath="%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe"
      for /f "usebackq delims=" %%i in (`%vswherepath% -latest -property installationPath`) do (
        set vslatest="%%i"
        if exist "%%i\Common7\Tools\vsdevcmd.bat" (
          set vsdevcmd="%%i\Common7\Tools\vsdevcmd.bat"
        )
      )
      
      @echo vslatest %vslatest%
      @echo vsdevcmd %vsdevcmd%
      
      @echo ##vso[task.setvariable variable=vslatest]%vslatest%
      @echo ##vso[task.setvariable variable=vsdevcmd]%vsdevcmd%
    displayName: 'locate vsdevcmd via vswhere'
  - task: BatchScript@1
    displayName: 'Configure environment with VSDevCmd'
    inputs:
      filename: $(vsdevcmd)
      modifyEnvironment: true
  - task: NuGetCommand@2
    inputs:
      command: 'restore'
      restoreSolution: 'src\vs-package\neodebug-vs.csproj'
      feedsToUse: 'select'
  - task: MSBuild@1
    inputs:
      solution: 'src\vs-package\neodebug-vs.csproj'
      configuration: 'Release'
  - task: CopyFiles@2
    displayName: 'copy VSIX package to Artifact Staging Directory'
    inputs:
      SourceFolder: './src/vs-package/bin/Release'
      Contents: '*.vsix'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/vs-package'
  - task: PublishBuildArtifacts@1
    displayName: 'publish vsix build artifacts'
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/vs-package'
      artifactName: 'VS-package'
