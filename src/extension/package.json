{
    "name": "neo-contract-debug",
    "publisher": "ngd-seattle",
    "version": "0.0.0",
    "displayName": "Neo Smart Contract Debugger",
    "description": "Debugger Extension for Neo Smart Contracts",
    "icon": "neo-logo-256.png",
    "galleryBanner": {
        "color": "#242424",
        "theme": "dark"
    },
    "author": "Neo Global Development Seattle",
    "engines": {
        "vscode": "^1.47.0"
    },
    "categories": [
        "Debuggers"
    ],
    "bugs": {
        "url": "https://github.com/neo-project/neo-debugger/issues"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/neo-project/neo-debugger.git"
    },
    "keywords": [
        "Neo",
        "Blockchain",
        "Smart Contract"
    ],
    "activationEvents": [
        "onDebug"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "Neo Debugger",
            "properties": {
                "neo-debugger.log": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable debug adapter logging to %LOCALAPPDATA%/Neo-Debugger/logs"
                },
                "neo-debugger.debug": {
                    "type": "boolean",
                    "default": false,
                    "description": "Pass the --debug flag when launching the Neo Debugger server"
                },
                "neo-debugger.default-debug-view": {
                    "type": "string",
                    "enum": [
                        "source",
                        "disassembly"
                    ],
                    "default": "source",
                    "description": "Specify the default debug view"
                },
                "neo-debugger.debug-adapter": {
                    "type": "array",
                    "items": "string",
                    "description": "Path to the Neo Debugger server"
                }
            }
        },
        "debuggers": [
            {
                "type": "neo-contract",
                "label": "Neo Contract",
                "configurationAttributes": {
                    "launch": {
                        "required": [
                            "program"
                        ],
                        "properties": {
                            "program": {
                                "type": "string",
                                "description": "Absolute path to Neo smart contract (.avm/.nef)"
                            },
                            "neo-express": {
                                "type": "string",
                                "description": "Absolute path to Neo Express file (.neo-express / .neo-express.json)"
                            },
                            "sourceFileMap": {
                                "type": "object",
                                "description": "Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            },
                            "invocation": {
                                "oneOf": [
                                    {
                                        "type": "object",
                                        "required": [
                                            "invokeFile"
                                        ],
                                        "properties": {
                                            "invokeFile": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "required": [
                                            "traceFile"
                                        ],
                                        "properties": {
                                            "invokeFile": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "required": [
                                            "args"
                                        ],
                                        "properties": {
                                            "contract": {
                                                "type": "string"
                                            },
                                            "operation": {
                                                "type": "string"
                                            },
                                            "args": {
                                                "type": "array"
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "required": [
                                            "oracleResponse"
                                        ],
                                        "properties": {
                                            "oracleResponse": {
                                                "type": "object",
                                                "required": [
                                                    "url",
                                                    "callback"
                                                ],
                                                "properties": {
                                                    "url": {
                                                        "type": "string"
                                                    },
                                                    "callback": {
                                                        "type": "string"
                                                    },
                                                    "result": {},
                                                    "resultFile": {
                                                        "type": "string"
                                                    },
                                                    "filter": {
                                                        "type": "string"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Success",
                                                            "ConsensusUnreachable",
                                                            "NotFound",
                                                            "Timeout",
                                                            "Forbidden",
                                                            "ResponseTooLarge",
                                                            "InsufficientFunds",
                                                            "Error"
                                                        ]
                                                    },
                                                    "gas": {
                                                        "type": "number"
                                                    },
                                                    "userData": {}
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            "stored-contracts": {
                                "type": "array",
                                "description": "Optional additional contracts to load for dynamic invoke scenarios",
                                "items": {
                                    "oneOf": [
                                        {
                                            "type": "string",
                                            "description": "Absolute path to Neo smart contract (.avm/.nef)"
                                        },
                                        {
                                            "type": "object",
                                            "description": "Additional contract with emulated storage",
                                            "required": [
                                                "program"
                                            ],
                                            "properties": {
                                                "program": {
                                                    "type": "string",
                                                    "description": "Absolute path to Neo smart contract (.avm/.nef)"
                                                },
                                                "storage": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "description": "Key/value pairs used to populate debugger's emulated storage",
                                                        "required": [
                                                            "key",
                                                            "value"
                                                        ],
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            },
                                                            "constant": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "operation": {
                                "type": "string",
                                "description": "Neo 3 contract operation to invoke"
                            },
                            "args": {
                                "type": "array",
                                "description": "Command line arguments passed to the program."
                            },
                            "invokeFile": {
                                "type": "string",
                                "description": "Optional .neo-invoke.json file used to specify contract parameters"
                            },
                            "checkpoint": {
                                "type": "string",
                                "description": "Optional neo-express checkpoint file used for contract execution"
                            },
                            "traceFile": {
                                "type": "string",
                                "description": "Absolute path to .neo-trace file"
                            },
                            "signers": {
                                "type": "array",
                                "description": "Optional transaction signers",
                                "items": {
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "object",
                                            "required": [
                                                "account"
                                            ],
                                            "properties": {
                                                "account": {
                                                    "type": "string"
                                                },
                                                "scopes": {
                                                    "type": "string",
                                                    "enum": [
                                                        "FeeOnly",
                                                        "CalledByEntry",
                                                        "CustomContracts",
                                                        "CustomGroups",
                                                        "Global"
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "utxo": {
                                "type": "object",
                                "description": "UTXO assets (aka NEO and GAS) to attach to the transaction being debugged",
                                "properties": {
                                    "inputs": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "txid",
                                                "n"
                                            ],
                                            "properties": {
                                                "txid": {
                                                    "type": "string"
                                                },
                                                "n": {
                                                    "type": "number"
                                                },
                                                "value": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "outputs": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "asset",
                                                "value",
                                                "address"
                                            ],
                                            "properties": {
                                                "asset": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "number"
                                                },
                                                "address": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "storage": {
                                "type": "array",
                                "description": "Key/value pairs used to populate debugger's emulated storage",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "key",
                                        "value"
                                    ],
                                    "properties": {
                                        "key": {},
                                        "value": {},
                                        "constant": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            "return-types": {
                                "type": "array",
                                "description": "Specifies the expected return type of the contract entry-point.",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "int",
                                        "bool",
                                        "string",
                                        "hex",
                                        "byte[]"
                                    ]
                                }
                            },
                            "runtime": {
                                "type": "object",
                                "description": "Specifies behavior of Runtime.Trigger and Runtime.CheckWitness members.",
                                "properties": {
                                    "trigger": {
                                        "type": "string",
                                        "description": "Rutime.Trigger return value",
                                        "enum": [
                                            "verification",
                                            "application"
                                        ]
                                    },
                                    "check-witness": {
                                        "description": "Runtime.CheckWitness behavior",
                                        "oneOf": [
                                            {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "Witnesses to check against"
                                            },
                                            {
                                                "type": "boolean",
                                                "description": "hard coded return value (no actual checking performed)"
                                            },
                                            {
                                                "type": "string",
                                                "enum": [
                                                    "checkpoint"
                                                ],
                                                "description": "use checkpoint witness information"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "configurationSnippets": [
                    {
                        "label": "Neo Contract: Launch",
                        "description": "A new configuration for debugging a Neo Smart Contract",
                        "body": {
                            "name": "Neo Contract",
                            "type": "neo-contract",
                            "request": "launch",
                            "program": "${workspaceFolder}",
                            "invocation": {
                                "args": []
                            },
                            "storage": []
                        }
                    }
                ]
            }
        ],
        "languages": [
            {
                "id": "neovm.disassembly",
                "aliases": [
                    "Disassembly"
                ],
                "extensions": [
                    ".neovm"
                ]
            }
        ],
        "commands": [
            {
                "category": "Neo Debugger",
                "title": "Display source view",
                "command": "neo-debugger.displaySourceView"
            },
            {
                "category": "Neo Debugger",
                "title": "Display disassembly view",
                "command": "neo-debugger.displayDisassemblyView"
            },
            {
                "category": "Neo Debugger",
                "title": "Toggle Debug view",
                "command": "neo-debugger.toggleDebugView",
                "icon": {
                    "light": "resources/light/tools.svg",
                    "dark": "resources/dark/tools.svg"
                }
            }
        ],
        "menus": {
            "debug/toolBar": [
                {
                    "command": "neo-debugger.toggleDebugView",
                    "when": "debugType == 'neo-contract'"
                }
            ]
        },
        "grammars": [
            {
                "language": "neovm.disassembly",
                "scopeName": "source.disassembly",
                "path": "./syntaxes/disassembly.json"
            }
        ],
        "breakpoints": [
            {
                "language": "neovm.disassembly"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile",
        "test": "node ./out/test/runTest.js",
        "package": "gulp setversion &&  vsce package",
        "pack-adapters-local": "dotnet pack ../adapter2 -o . && dotnet pack ../adapter3 -o .",
        "package-local": "npm run pack-adapters-local && npm run package"
    },
    "dependencies": {
        "glob": "^7.1.6",
        "slash": "^3.0.0"
    },
    "devDependencies": {
        "@types/glob": "^7.1.3",
        "@types/mocha": "^8.0.3",
        "@types/node": "^12.8.1",
        "@types/vscode": "^1.47.0",
        "gulp": "4.0.2",
        "mocha": "^8.1.3",
        "nerdbank-gitversioning": "^3.3.37",
        "tslint": "^6.1.3",
        "typescript": "^4.0.5",
        "vsce": "^1.81.1",
        "vscode-test": "^1.4.0"
    }
}
