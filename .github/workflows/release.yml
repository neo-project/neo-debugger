name: Release

on:
  workflow_dispatch:
    inputs:
      githubRelease:
        description: 'Create a GitHub release (develop/release branches only)'
        default: true
        type: boolean
      marketplaceRelease:
        description: 'Publish to VSCode Marketplace (develop/release branches only)'
        default: true
        type: boolean

jobs:
  build:
    uses: ./.github/workflows/build-vscode.yml
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:

    - name: Validate Release
      uses: actions/github-script@v6.0.0
      env:
        PRERELEASE: ${{ needs.build.outputs.preRelease }}
      with:
        script: |

          const onDevelopBranch = context.ref === 'refs/heads/develop';
          const onReleaseBranch = context.ref.startsWith('refs/heads/release/');

          // environment values are passed as strings, so convert PRERELEASE to integer via + operator
          // and then to boolean via !! operator
          const preRelease = !!(+process.env.PRERELEASE);

          // validate we are releasing from a publication branch and that preRelease flag is set correctly
          if (!onDevelopBranch && !onReleaseBranch) { core.setFailed('Can only release from develop or release branches'); }
          if (onDevelopBranch && !preRelease) { core.setFailed('develop branch releases must have odd minor version'); }
          if (onReleaseBranch && preRelease) { core.setFailed('release branch releases must have even minor version'); }

    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.1.0
      with:
        name: adapters
        path: ./artifacts
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.1.0
      with:
        name: vscode-extension
        path: ./artifacts

    # NOTE: even though github/marketplaceRelease inputs are marked as type boolean, the value returned 
    #       via github.event.inputs is string encoded (i.e. 'true' or 'false'). This feels somewhat
    #       fragile, but if the github.event.inputs encoding changes at least it will most likely break
    #       such that the releases do not get published

    - name: Create GitHub release
      if: ${{ github.event.inputs.githubRelease == 'true' }}
      uses: marvinpinto/action-automatic-releases@v1.1.1
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: ${{ needs.build.outputs.preRelease == 1 }}
        title: Release ${{ needs.build.outputs.releaseVersion }}
        automatic_release_tag: ${{ needs.build.outputs.releaseVersion }}
        files: |
          ./artifacts/*
    - name: Publish debug extension to VSCode Marketplace
      if: ${{ github.event.inputs.marketplaceRelease == 'true' }}
      run: npx vsce publish -i ${{ format('./artifacts/neo-contract-debug-{0}.vsix', needs.build.outputs.extensionVersion) }} -p ${{ secrets.VSCODE_MARKETPLACE_TOKEN }}
