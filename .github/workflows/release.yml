name: Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Install nbgv
      run: dotnet tool install nbgv --tool-path ./tools 
    - name: Run nbgv
      run: echo "NUGET_PACKAGE_VERSION=$(./tools/nbgv get-version -v NuGetPackageVersion)" >> $GITHUB_ENV
    - name: Install dependencies
      run: dotnet restore
    - name: Pack debug adapters
      run: dotnet pack --output ./adapters --configuration Release --no-restore --verbosity normal --include-symbols
    - name: copy adapters nuget package into extension folder
      run: cp adapters/*.nupkg src/extension/
    - name: copy repo root readme into extension folder
      run: cp readme.md src/extension/
    - name: NPM install
      run: npm ci
      working-directory: './src/extension'
    - name: NPM run package
      run: npm run package
      working-directory: './src/extension'
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: ./adapters/*
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: ./src/extension/*.vsix
    - name: Create Release
      uses: marvinpinto/action-automatic-releases@v1.1.1
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: ${{ contains(env.NUGET_PACKAGE_VERSION, '-preview') }}
        title: Release ${{ env.NUGET_PACKAGE_VERSION }}
        automatic_release_tag: ${{ env.NUGET_PACKAGE_VERSION }}
        files: |
          ./adapters/*
          ./src/extension/*.vsix
